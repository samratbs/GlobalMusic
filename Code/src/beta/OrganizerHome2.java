/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package beta;

import javax.swing.*;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import net.proteanit.sql.DbUtils;
import javax.swing.table.DefaultTableModel;

public class OrganizerHome2 extends javax.swing.JFrame {

    
    
    public static String username;
    
    public OrganizerHome2(String var) {
        initComponents();
        this.setLocationRelativeTo(null); 
        username = var;
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OrganizerHomePnl = new javax.swing.JPanel();
        LoggedInAsLbl = new javax.swing.JLabel();
        EditAccDetailsBtn = new javax.swing.JButton();
        OrganizerPicIcon = new javax.swing.JLabel();
        LogOutLbl = new javax.swing.JLabel();
        ProjectTitleLbl = new javax.swing.JLabel();
        AddConcertsLbl = new javax.swing.JLabel();
        ManageConcertsLbl = new javax.swing.JLabel();
        MainIcon = new javax.swing.JLabel();
        AddBandsLbl = new javax.swing.JLabel();
        OrganizerBotPnl = new javax.swing.JPanel();
        AddConcertsPnl = new javax.swing.JPanel();
        ConcertNameLbl = new javax.swing.JLabel();
        ConcertEndDateLbl = new javax.swing.JLabel();
        ConcertEndTimeLbl = new javax.swing.JLabel();
        A_PremiumPriceLbl = new javax.swing.JLabel();
        B_NonPremiumPriceLbl = new javax.swing.JLabel();
        C_CorporatePriceLbl = new javax.swing.JLabel();
        ConcertNameTxt = new javax.swing.JTextField();
        PremiumPriceTxt = new javax.swing.JTextField();
        NonPremiumPriceTxt = new javax.swing.JTextField();
        CorporatePriceTxt = new javax.swing.JTextField();
        ConcertEndTimeTxt = new javax.swing.JTextField();
        AddConcertBtn = new javax.swing.JButton();
        SponsorLbl = new javax.swing.JLabel();
        SponsorTxt = new javax.swing.JTextField();
        ConcertVenueLbl = new javax.swing.JLabel();
        ConcertVenueTxt = new javax.swing.JTextField();
        ConcertStartDateLbl = new javax.swing.JLabel();
        ConcertStartTimeLbl = new javax.swing.JLabel();
        ConcertStartTimeTxt = new javax.swing.JTextField();
        ConcertStartDateTxt = new javax.swing.JTextField();
        ConcertEndDateTxt = new javax.swing.JTextField();
        AddDateErrorLabel = new javax.swing.JLabel();
        AddTimeErrorLabel = new javax.swing.JLabel();
        EditAccDetailsPnl = new javax.swing.JPanel();
        EditAccDetailsTitleLbl = new javax.swing.JLabel();
        NameLbl = new javax.swing.JLabel();
        CreditLbl = new javax.swing.JLabel();
        AddressTxt = new javax.swing.JTextField();
        WebLbl = new javax.swing.JLabel();
        AddressLbl = new javax.swing.JLabel();
        CreditTxt = new javax.swing.JTextField();
        PhoneTxt = new javax.swing.JTextField();
        PhoneLbl = new javax.swing.JLabel();
        NameTxt = new javax.swing.JTextField();
        PasswordTxt = new javax.swing.JTextField();
        PasswordLbl = new javax.swing.JLabel();
        SaveBtn = new javax.swing.JButton();
        WebTxt = new javax.swing.JTextField();
        EditConcertDetailsPnl2 = new javax.swing.JPanel();
        EditConcertDetailsLbl = new javax.swing.JLabel();
        EditConcertNameLbl = new javax.swing.JLabel();
        EditConcertVenueLbl = new javax.swing.JLabel();
        EditConcertStartTimeLbl = new javax.swing.JLabel();
        EditConcertStartDateLbl = new javax.swing.JLabel();
        EditConcertVenueTxt = new javax.swing.JTextField();
        EditConcertNameTxt = new javax.swing.JTextField();
        EditA_PremiumPriceLbl = new javax.swing.JLabel();
        EditConcertEndTimeTxt = new javax.swing.JTextField();
        EditPremiumPriceTxt = new javax.swing.JTextField();
        EditNonPremiumPriceTxt = new javax.swing.JTextField();
        EditSponsorLbl = new javax.swing.JLabel();
        EditSponsorTxt = new javax.swing.JTextField();
        EditB_NonPremiumPriceLbl = new javax.swing.JLabel();
        UpdateConcertBtn = new javax.swing.JButton();
        DeleteConcertBtn = new javax.swing.JButton();
        EditC_CorporatePriceLbl = new javax.swing.JLabel();
        EditCorporatePriceTxt = new javax.swing.JTextField();
        EditConcertEndDateLbl = new javax.swing.JLabel();
        EditConcertEndTimeLbl = new javax.swing.JLabel();
        EditConcertStartTimeTxt = new javax.swing.JTextField();
        BackToSelectConcertTblBtn = new javax.swing.JButton();
        EditConcertStartDateTxt = new javax.swing.JTextField();
        EditConcertEndDateTxt = new javax.swing.JTextField();
        ErrorLabel = new javax.swing.JLabel();
        EditConcertDetailsPnl1 = new javax.swing.JPanel();
        EditConcertDetailsLbl2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SelectConcertTbl = new javax.swing.JTable();
        AddBandsPnl2 = new javax.swing.JPanel();
        BandNameTxt = new javax.swing.JTextField();
        AgentNameTxt = new javax.swing.JTextField();
        BandNameLbl = new javax.swing.JLabel();
        AgentNameLbl = new javax.swing.JLabel();
        AddBandBtn = new javax.swing.JButton();
        BackToSelectConcertBtn = new javax.swing.JButton();
        AddBandsPnl1 = new javax.swing.JPanel();
        SelectConcertLbl = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        SelectConcertTbl2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(34, 36, 49));

        OrganizerHomePnl.setBackground(new java.awt.Color(34, 36, 49));
        OrganizerHomePnl.setForeground(new java.awt.Color(79, 91, 201));
        OrganizerHomePnl.setToolTipText("");

        LoggedInAsLbl.setFont(new java.awt.Font("Microsoft YaHei", 0, 13)); // NOI18N
        LoggedInAsLbl.setForeground(new java.awt.Color(0, 102, 255));
        LoggedInAsLbl.setText("Logged in as Organizer");

        EditAccDetailsBtn.setBackground(new java.awt.Color(0, 102, 255));
        EditAccDetailsBtn.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 13)); // NOI18N
        EditAccDetailsBtn.setText("Edit Account Details");
        EditAccDetailsBtn.setBorderPainted(false);
        EditAccDetailsBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditAccDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditAccDetailsBtnActionPerformed(evt);
            }
        });

        OrganizerPicIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beta/Icons/human.png"))); // NOI18N

        LogOutLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beta/Icons/Logout.jpg"))); // NOI18N
        LogOutLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogOutLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogOutLblMouseClicked(evt);
            }
        });

        ProjectTitleLbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 0, 36)); // NOI18N
        ProjectTitleLbl.setForeground(new java.awt.Color(0, 102, 204));
        ProjectTitleLbl.setText("Global Music");

        AddConcertsLbl.setBackground(new java.awt.Color(255, 255, 255));
        AddConcertsLbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        AddConcertsLbl.setForeground(new java.awt.Color(0, 102, 204));
        AddConcertsLbl.setText("Add concerts");
        AddConcertsLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddConcertsLbl.setOpaque(true);
        AddConcertsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddConcertsLblMouseClicked(evt);
            }
        });

        ManageConcertsLbl.setBackground(new java.awt.Color(34, 36, 49));
        ManageConcertsLbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        ManageConcertsLbl.setForeground(new java.awt.Color(0, 102, 204));
        ManageConcertsLbl.setText("Manage Concerts");
        ManageConcertsLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ManageConcertsLbl.setOpaque(true);
        ManageConcertsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ManageConcertsLblMouseClicked(evt);
            }
        });

        MainIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beta/Icons/gm.png"))); // NOI18N

        AddBandsLbl.setBackground(new java.awt.Color(34, 36, 49));
        AddBandsLbl.setFont(new java.awt.Font("Microsoft JhengHei UI Light", 1, 18)); // NOI18N
        AddBandsLbl.setForeground(new java.awt.Color(0, 102, 204));
        AddBandsLbl.setText("Add Bands");
        AddBandsLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddBandsLbl.setOpaque(true);
        AddBandsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddBandsLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout OrganizerHomePnlLayout = new javax.swing.GroupLayout(OrganizerHomePnl);
        OrganizerHomePnl.setLayout(OrganizerHomePnlLayout);
        OrganizerHomePnlLayout.setHorizontalGroup(
            OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                        .addComponent(AddConcertsLbl)
                        .addGap(62, 62, 62)
                        .addComponent(ManageConcertsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                        .addComponent(ProjectTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MainIcon)
                        .addGroup(OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(AddBandsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                                .addGap(503, 503, 503)
                                .addComponent(OrganizerPicIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LoggedInAsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(LogOutLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OrganizerHomePnlLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EditAccDetailsBtn)
                                .addGap(133, 133, 133))))))
        );
        OrganizerHomePnlLayout.setVerticalGroup(
            OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                .addGroup(OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ProjectTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MainIcon)
                            .addGroup(OrganizerHomePnlLayout.createSequentialGroup()
                                .addGroup(OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(LoggedInAsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(OrganizerPicIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LogOutLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EditAccDetailsBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(OrganizerHomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ManageConcertsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddConcertsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddBandsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(555, 555, 555))
        );

        OrganizerBotPnl.setLayout(new java.awt.CardLayout());

        AddConcertsPnl.setBackground(new java.awt.Color(34, 36, 49));
        AddConcertsPnl.setForeground(new java.awt.Color(34, 36, 49));

        ConcertNameLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ConcertNameLbl.setForeground(new java.awt.Color(0, 102, 204));
        ConcertNameLbl.setText("Concert Name :");

        ConcertEndDateLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ConcertEndDateLbl.setForeground(new java.awt.Color(0, 102, 204));
        ConcertEndDateLbl.setText("Concert End Date :");

        ConcertEndTimeLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ConcertEndTimeLbl.setForeground(new java.awt.Color(0, 102, 204));
        ConcertEndTimeLbl.setText("Concert End Time :");

        A_PremiumPriceLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        A_PremiumPriceLbl.setForeground(new java.awt.Color(0, 102, 204));
        A_PremiumPriceLbl.setText("Ticket A Price :");

        B_NonPremiumPriceLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        B_NonPremiumPriceLbl.setForeground(new java.awt.Color(0, 102, 204));
        B_NonPremiumPriceLbl.setText("Ticket B Price :");

        C_CorporatePriceLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        C_CorporatePriceLbl.setForeground(new java.awt.Color(0, 102, 204));
        C_CorporatePriceLbl.setText("Ticket C Price :");

        ConcertNameTxt.setBackground(new java.awt.Color(193, 234, 244));
        ConcertNameTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        PremiumPriceTxt.setBackground(new java.awt.Color(193, 234, 244));
        PremiumPriceTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        NonPremiumPriceTxt.setBackground(new java.awt.Color(193, 234, 244));
        NonPremiumPriceTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        CorporatePriceTxt.setBackground(new java.awt.Color(193, 234, 244));
        CorporatePriceTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        ConcertEndTimeTxt.setBackground(new java.awt.Color(193, 234, 244));
        ConcertEndTimeTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ConcertEndTimeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ConcertEndTimeTxtKeyReleased(evt);
            }
        });

        AddConcertBtn.setBackground(new java.awt.Color(0, 102, 255));
        AddConcertBtn.setText("Add");
        AddConcertBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddConcertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddConcertBtnActionPerformed(evt);
            }
        });

        SponsorLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SponsorLbl.setForeground(new java.awt.Color(0, 102, 204));
        SponsorLbl.setText("Sponsor :");

        SponsorTxt.setBackground(new java.awt.Color(193, 234, 244));
        SponsorTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        ConcertVenueLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ConcertVenueLbl.setForeground(new java.awt.Color(0, 102, 204));
        ConcertVenueLbl.setText("Concert Venue :");

        ConcertVenueTxt.setBackground(new java.awt.Color(193, 234, 244));
        ConcertVenueTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        ConcertStartDateLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ConcertStartDateLbl.setForeground(new java.awt.Color(0, 102, 204));
        ConcertStartDateLbl.setText("Concert Start Date :");

        ConcertStartTimeLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ConcertStartTimeLbl.setForeground(new java.awt.Color(0, 102, 204));
        ConcertStartTimeLbl.setText("Concert Start Time :");

        ConcertStartTimeTxt.setBackground(new java.awt.Color(193, 234, 244));
        ConcertStartTimeTxt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ConcertStartTimeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ConcertStartTimeTxtKeyReleased(evt);
            }
        });

        ConcertStartDateTxt.setBackground(new java.awt.Color(204, 255, 255));
        ConcertStartDateTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ConcertStartDateTxtKeyReleased(evt);
            }
        });

        ConcertEndDateTxt.setBackground(new java.awt.Color(193, 234, 244));
        ConcertEndDateTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ConcertEndDateTxtKeyReleased(evt);
            }
        });

        AddDateErrorLabel.setForeground(new java.awt.Color(255, 0, 0));

        AddTimeErrorLabel.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout AddConcertsPnlLayout = new javax.swing.GroupLayout(AddConcertsPnl);
        AddConcertsPnl.setLayout(AddConcertsPnlLayout);
        AddConcertsPnlLayout.setHorizontalGroup(
            AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddConcertsPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddConcertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(541, 541, 541))
            .addGroup(AddConcertsPnlLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_NonPremiumPriceLbl)
                    .addComponent(ConcertNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C_CorporatePriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A_PremiumPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConcertVenueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConcertVenueTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ConcertNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CorporatePriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(PremiumPriceTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(NonPremiumPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(122, 122, 122)
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConcertEndDateLbl)
                    .addComponent(ConcertStartDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConcertStartTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ConcertEndTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SponsorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ConcertStartTimeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                        .addComponent(ConcertEndTimeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                        .addComponent(SponsorTxt)
                        .addComponent(ConcertStartDateTxt)
                        .addComponent(ConcertEndDateTxt))
                    .addComponent(AddDateErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddTimeErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        AddConcertsPnlLayout.setVerticalGroup(
            AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddConcertsPnlLayout.createSequentialGroup()
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddConcertsPnlLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConcertNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConcertNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConcertStartDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddConcertsPnlLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(ConcertStartDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PremiumPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(A_PremiumPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddConcertsPnlLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(ConcertEndDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ConcertEndDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(AddDateErrorLabel)
                .addGap(18, 18, 18)
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConcertStartTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NonPremiumPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(B_NonPremiumPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ConcertStartTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddConcertsPnlLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConcertEndTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConcertEndTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(AddTimeErrorLabel)
                        .addGap(3, 3, 3)
                        .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SponsorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SponsorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(AddConcertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168))
                    .addGroup(AddConcertsPnlLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(C_CorporatePriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CorporatePriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddConcertsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ConcertVenueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConcertVenueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        OrganizerBotPnl.add(AddConcertsPnl, "card2");

        EditAccDetailsPnl.setBackground(new java.awt.Color(34, 36, 49));

        EditAccDetailsTitleLbl.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 24)); // NOI18N
        EditAccDetailsTitleLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditAccDetailsTitleLbl.setText("Edit your details ");

        NameLbl.setBackground(new java.awt.Color(34, 36, 49));
        NameLbl.setForeground(new java.awt.Color(0, 102, 204));
        NameLbl.setText("Name");
        NameLbl.setOpaque(true);

        CreditLbl.setBackground(new java.awt.Color(34, 36, 49));
        CreditLbl.setForeground(new java.awt.Color(0, 102, 204));
        CreditLbl.setText("Credit No");
        CreditLbl.setOpaque(true);

        WebLbl.setBackground(new java.awt.Color(34, 36, 49));
        WebLbl.setForeground(new java.awt.Color(0, 102, 204));
        WebLbl.setText("Web Address");
        WebLbl.setOpaque(true);

        AddressLbl.setBackground(new java.awt.Color(34, 36, 49));
        AddressLbl.setForeground(new java.awt.Color(0, 102, 204));
        AddressLbl.setText("Address");
        AddressLbl.setOpaque(true);

        PhoneLbl.setBackground(new java.awt.Color(34, 36, 49));
        PhoneLbl.setForeground(new java.awt.Color(0, 102, 204));
        PhoneLbl.setText("Phone Number");
        PhoneLbl.setOpaque(true);

        PasswordLbl.setBackground(new java.awt.Color(34, 36, 49));
        PasswordLbl.setForeground(new java.awt.Color(0, 102, 204));
        PasswordLbl.setText("Password");
        PasswordLbl.setOpaque(true);

        SaveBtn.setBackground(new java.awt.Color(0, 102, 255));
        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EditAccDetailsPnlLayout = new javax.swing.GroupLayout(EditAccDetailsPnl);
        EditAccDetailsPnl.setLayout(EditAccDetailsPnlLayout);
        EditAccDetailsPnlLayout.setHorizontalGroup(
            EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                        .addComponent(EditAccDetailsTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                        .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditAccDetailsPnlLayout.createSequentialGroup()
                                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddressLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CreditLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(WebLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                                                .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 228, Short.MAX_VALUE)
                                                .addComponent(PasswordLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                                                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(CreditTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(AddressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(WebTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, EditAccDetailsPnlLayout.createSequentialGroup()
                                .addComponent(PhoneLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(192, 192, 192))
        );
        EditAccDetailsPnlLayout.setVerticalGroup(
            EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                .addComponent(EditAccDetailsTitleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(PasswordLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PasswordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CreditTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreditLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddressLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                        .addComponent(WebLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(EditAccDetailsPnlLayout.createSequentialGroup()
                        .addComponent(WebTxt)
                        .addGap(18, 18, 18)))
                .addGroup(EditAccDetailsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PhoneLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(176, Short.MAX_VALUE))
        );

        OrganizerBotPnl.add(EditAccDetailsPnl, "card4");

        EditConcertDetailsPnl2.setBackground(new java.awt.Color(34, 36, 49));

        EditConcertDetailsLbl.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 24)); // NOI18N
        EditConcertDetailsLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertDetailsLbl.setText("Edit your Concert Details");

        EditConcertNameLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditConcertNameLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditConcertNameLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertNameLbl.setText("Name :");
        EditConcertNameLbl.setOpaque(true);

        EditConcertVenueLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditConcertVenueLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditConcertVenueLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertVenueLbl.setText("Venue :");
        EditConcertVenueLbl.setOpaque(true);

        EditConcertStartTimeLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditConcertStartTimeLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditConcertStartTimeLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertStartTimeLbl.setText("Start Time :");
        EditConcertStartTimeLbl.setOpaque(true);

        EditConcertStartDateLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditConcertStartDateLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditConcertStartDateLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertStartDateLbl.setText("Start Date :");
        EditConcertStartDateLbl.setOpaque(true);

        EditA_PremiumPriceLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditA_PremiumPriceLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditA_PremiumPriceLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditA_PremiumPriceLbl.setText("Ticket A Price :");
        EditA_PremiumPriceLbl.setOpaque(true);

        EditConcertEndTimeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EditConcertEndTimeTxtKeyReleased(evt);
            }
        });

        EditSponsorLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditSponsorLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditSponsorLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditSponsorLbl.setText("Sponsor :");
        EditSponsorLbl.setOpaque(true);

        EditB_NonPremiumPriceLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditB_NonPremiumPriceLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditB_NonPremiumPriceLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditB_NonPremiumPriceLbl.setText("Ticket B Price :");
        EditB_NonPremiumPriceLbl.setOpaque(true);

        UpdateConcertBtn.setBackground(new java.awt.Color(255, 0, 51));
        UpdateConcertBtn.setText("Update Details");
        UpdateConcertBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UpdateConcertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateConcertBtnActionPerformed(evt);
            }
        });

        DeleteConcertBtn.setBackground(new java.awt.Color(255, 0, 51));
        DeleteConcertBtn.setText("Cancel Concert");
        DeleteConcertBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteConcertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteConcertBtnActionPerformed(evt);
            }
        });

        EditC_CorporatePriceLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditC_CorporatePriceLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditC_CorporatePriceLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditC_CorporatePriceLbl.setText("Ticket C Price :");
        EditC_CorporatePriceLbl.setOpaque(true);

        EditConcertEndDateLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditConcertEndDateLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditConcertEndDateLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertEndDateLbl.setText("End Date :");
        EditConcertEndDateLbl.setOpaque(true);

        EditConcertEndTimeLbl.setBackground(new java.awt.Color(34, 36, 49));
        EditConcertEndTimeLbl.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EditConcertEndTimeLbl.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertEndTimeLbl.setText("End Time :");
        EditConcertEndTimeLbl.setOpaque(true);

        EditConcertStartTimeTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EditConcertStartTimeTxtKeyReleased(evt);
            }
        });

        BackToSelectConcertTblBtn.setBackground(new java.awt.Color(255, 0, 51));
        BackToSelectConcertTblBtn.setText("Back");
        BackToSelectConcertTblBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackToSelectConcertTblBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToSelectConcertTblBtnActionPerformed(evt);
            }
        });

        EditConcertStartDateTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EditConcertStartDateTxtKeyReleased(evt);
            }
        });

        EditConcertEndDateTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EditConcertEndDateTxtKeyReleased(evt);
            }
        });

        ErrorLabel.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout EditConcertDetailsPnl2Layout = new javax.swing.GroupLayout(EditConcertDetailsPnl2);
        EditConcertDetailsPnl2.setLayout(EditConcertDetailsPnl2Layout);
        EditConcertDetailsPnl2Layout.setHorizontalGroup(
            EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditConcertDetailsPnl2Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditConcertDetailsPnl2Layout.createSequentialGroup()
                        .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditConcertDetailsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditConcertDetailsPnl2Layout.createSequentialGroup()
                                        .addComponent(EditConcertNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(EditConcertNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditConcertDetailsPnl2Layout.createSequentialGroup()
                                        .addComponent(EditConcertVenueLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(EditConcertVenueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(EditConcertDetailsPnl2Layout.createSequentialGroup()
                                    .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(EditConcertStartTimeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(EditConcertStartDateLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(EditConcertEndDateLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(EditConcertEndTimeLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(EditConcertEndTimeTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                        .addComponent(EditConcertStartTimeTxt)
                                        .addComponent(EditConcertStartDateTxt)
                                        .addComponent(EditConcertEndDateTxt)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                        .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditC_CorporatePriceLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EditA_PremiumPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EditSponsorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EditB_NonPremiumPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(BackToSelectConcertTblBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(EditConcertDetailsPnl2Layout.createSequentialGroup()
                                .addComponent(UpdateConcertBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DeleteConcertBtn))
                            .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(EditSponsorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EditNonPremiumPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EditPremiumPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EditCorporatePriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(203, Short.MAX_VALUE))
                    .addGroup(EditConcertDetailsPnl2Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        EditConcertDetailsPnl2Layout.setVerticalGroup(
            EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditConcertDetailsPnl2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(EditConcertDetailsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EditA_PremiumPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EditConcertNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EditConcertNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(EditPremiumPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditB_NonPremiumPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditNonPremiumPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditConcertVenueTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditConcertVenueLbl))
                .addGap(18, 18, 18)
                .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(EditC_CorporatePriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EditCorporatePriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EditConcertDetailsPnl2Layout.createSequentialGroup()
                        .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditConcertDetailsPnl2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(EditConcertStartDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(EditConcertStartDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditSponsorLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditSponsorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditConcertEndDateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditConcertEndDateTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))))
                .addGap(22, 22, 22)
                .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditConcertStartTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EditConcertStartTimeLbl))
                .addGap(21, 21, 21)
                .addGroup(EditConcertDetailsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditConcertEndTimeLbl)
                    .addComponent(EditConcertEndTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateConcertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteConcertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackToSelectConcertTblBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ErrorLabel)
                .addGap(55, 55, 55))
        );

        OrganizerBotPnl.add(EditConcertDetailsPnl2, "card4");

        EditConcertDetailsPnl1.setBackground(new java.awt.Color(34, 36, 49));

        EditConcertDetailsLbl2.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 24)); // NOI18N
        EditConcertDetailsLbl2.setForeground(new java.awt.Color(0, 102, 204));
        EditConcertDetailsLbl2.setText("Edit your Concert Details");

        SelectConcertTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11"
            }
        ));
        SelectConcertTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectConcertTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(SelectConcertTbl);

        javax.swing.GroupLayout EditConcertDetailsPnl1Layout = new javax.swing.GroupLayout(EditConcertDetailsPnl1);
        EditConcertDetailsPnl1.setLayout(EditConcertDetailsPnl1Layout);
        EditConcertDetailsPnl1Layout.setHorizontalGroup(
            EditConcertDetailsPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditConcertDetailsPnl1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(EditConcertDetailsLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(733, Short.MAX_VALUE))
            .addGroup(EditConcertDetailsPnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        EditConcertDetailsPnl1Layout.setVerticalGroup(
            EditConcertDetailsPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditConcertDetailsPnl1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(EditConcertDetailsLbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        OrganizerBotPnl.add(EditConcertDetailsPnl1, "card4");

        AddBandsPnl2.setBackground(new java.awt.Color(34, 36, 49));

        BandNameLbl.setBackground(new java.awt.Color(34, 36, 49));
        BandNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        BandNameLbl.setText("Band Name");
        BandNameLbl.setOpaque(true);

        AgentNameLbl.setBackground(new java.awt.Color(34, 36, 49));
        AgentNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        AgentNameLbl.setText("Agent Name");
        AgentNameLbl.setOpaque(true);

        AddBandBtn.setBackground(new java.awt.Color(255, 0, 0));
        AddBandBtn.setText("Add");
        AddBandBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBandBtnActionPerformed(evt);
            }
        });

        BackToSelectConcertBtn.setText("Back");
        BackToSelectConcertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToSelectConcertBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddBandsPnl2Layout = new javax.swing.GroupLayout(AddBandsPnl2);
        AddBandsPnl2.setLayout(AddBandsPnl2Layout);
        AddBandsPnl2Layout.setHorizontalGroup(
            AddBandsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddBandsPnl2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(BandNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BandNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addComponent(AgentNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddBandsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AddBandsPnl2Layout.createSequentialGroup()
                        .addComponent(AddBandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BackToSelectConcertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AgentNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(173, 173, 173))
        );
        AddBandsPnl2Layout.setVerticalGroup(
            AddBandsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddBandsPnl2Layout.createSequentialGroup()
                .addGroup(AddBandsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddBandsPnl2Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addGroup(AddBandsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BandNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BandNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AddBandsPnl2Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addGroup(AddBandsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AgentNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AgentNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)
                .addGroup(AddBandsPnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBandBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackToSelectConcertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        OrganizerBotPnl.add(AddBandsPnl2, "card6");

        AddBandsPnl1.setBackground(new java.awt.Color(34, 36, 49));

        SelectConcertLbl.setFont(new java.awt.Font("Microsoft JhengHei Light", 0, 24)); // NOI18N
        SelectConcertLbl.setForeground(new java.awt.Color(0, 102, 204));
        SelectConcertLbl.setText("Select Concert");

        SelectConcertTbl2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ));
        SelectConcertTbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectConcertTbl2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(SelectConcertTbl2);

        javax.swing.GroupLayout AddBandsPnl1Layout = new javax.swing.GroupLayout(AddBandsPnl1);
        AddBandsPnl1.setLayout(AddBandsPnl1Layout);
        AddBandsPnl1Layout.setHorizontalGroup(
            AddBandsPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddBandsPnl1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(SelectConcertLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(733, Short.MAX_VALUE))
            .addGroup(AddBandsPnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        AddBandsPnl1Layout.setVerticalGroup(
            AddBandsPnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddBandsPnl1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(SelectConcertLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        OrganizerBotPnl.add(AddBandsPnl1, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(OrganizerHomePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(OrganizerBotPnl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(OrganizerHomePnl, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OrganizerBotPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    Connection con;
    PreparedStatement ps;
    ResultSet rs;

    private void EditAccDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditAccDetailsBtnActionPerformed
        
        AddConcertsLbl.setBackground(new java.awt.Color(34,36,49));
        ManageConcertsLbl.setBackground(new java.awt.Color(34,36,49));
        AddBandsLbl.setBackground(new java.awt.Color(34,36,49));
       
        OrganizerBotPnl.removeAll();        
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        OrganizerBotPnl.add(EditAccDetailsPnl);
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        
        try
        {   
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            String query = "select * from user_info where username=?";
            ps = con.prepareStatement(query); 
            ps.setString(1, username);
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                NameTxt.setText(rs.getString(3));
                CreditTxt.setText(rs.getString(7));
                AddressTxt.setText(rs.getString(5));
                WebTxt.setText(rs.getString(9));
                PhoneTxt.setText(rs.getString(6));
                PasswordTxt.setText(rs.getString(2));
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
            JOptionPane.showMessageDialog(null, "Not Connected");
        }
    }//GEN-LAST:event_EditAccDetailsBtnActionPerformed

    private void AddConcertsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddConcertsLblMouseClicked
        AddConcertsLbl.setBackground(new java.awt.Color(255,255,255));
        AddBandsLbl.setBackground(new java.awt.Color(34,36,49));
        ManageConcertsLbl.setBackground(new java.awt.Color(34,36,49));
        
        OrganizerBotPnl.removeAll();
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        OrganizerBotPnl.add(AddConcertsPnl);
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
    }//GEN-LAST:event_AddConcertsLblMouseClicked

    private void ManageConcertsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ManageConcertsLblMouseClicked
        AddConcertsLbl.setBackground(new java.awt.Color(34,36,49));
        AddBandsLbl.setBackground(new java.awt.Color(34,36,49));
        ManageConcertsLbl.setBackground(new java.awt.Color(255,255,255));
        
        OrganizerBotPnl.removeAll();
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        OrganizerBotPnl.add(EditConcertDetailsPnl1);
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        
        try
        {   
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            String sql = "select concert_info.concert_id, concert_name, concert_venue, ticketa_price, ticketb_price, ticketc_price, sponsor, start_date, end_date, start_time, end_time from concert_info, concert_schedule where concert_info.concert_id=concert_schedule.concert_id AND concert_createdby=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, username);
            rs = ps.executeQuery();
            SelectConcertTbl.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }  
    }//GEN-LAST:event_ManageConcertsLblMouseClicked

    private void LogOutLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogOutLblMouseClicked
        LoginForm lgf = new LoginForm();
        lgf.setVisible(true);
        lgf.pack();
        lgf.setLocationRelativeTo(null);
        lgf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_LogOutLblMouseClicked

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        // TODO add your handling code here:
        try
        {   
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            String query = "update user_info set name=?, creditno=?, address=?, web_address=?, phoneno=?, password=?" + "where username=?";
            ps = con.prepareStatement(query);

            ps.setString(1, NameTxt.getText());
            ps.setString(2, CreditTxt.getText());
            ps.setString(3, AddressTxt.getText());
            ps.setString(4, WebTxt.getText());
            ps.setString(5, PhoneTxt.getText());
            ps.setString(6, PasswordTxt.getText());
            ps.setString(7, username);
            ps.executeUpdate();           
            ps.addBatch();

            JOptionPane.showMessageDialog(null, "Data updated successfully");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Data couldn't be updated");
            NameTxt.requestFocus();
        }
    }//GEN-LAST:event_SaveBtnActionPerformed

    public String concertId3;
    
    private void AddConcertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddConcertBtnActionPerformed
        // TODO add your handling code here:
        try
        {   
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            String query1 = "insert into concert_info(concert_name, concert_venue, concert_createdby, ticketa_price, ticketb_price, ticketc_price, sponsor)" + "values(?,?,?,?,?,?,?)";
            ps = con.prepareStatement(query1);

            ps.setString(1, ConcertNameTxt.getText());
            ps.setString(2, ConcertVenueTxt.getText());
            ps.setString(3, username);
            ps.setString(4, PremiumPriceTxt.getText());
            ps.setString(5, NonPremiumPriceTxt.getText());
            ps.setString(6, CorporatePriceTxt.getText());
            ps.setString(7, SponsorTxt.getText());
            ps.executeUpdate();
            
            
            String query2 = "select concert_id from concert_info where concert_name=?";
            ps = con.prepareStatement(query2);
            ps.setString(1, ConcertNameTxt.getText());
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                concertId3 = rs.getString("concert_id");
            }
            
            String query3 = "insert into concert_schedule(concert_id, start_date, end_date, start_time, end_time)" + "values(?,?,?,?,?)";
            ps = con.prepareStatement(query3);

            ps.setString(1, concertId3);
            ps.setString(2, ConcertStartDateTxt.getText());
            ps.setString(3, ConcertEndDateTxt.getText());
            ps.setString(4, ConcertStartTimeTxt.getText());
            ps.setString(5, ConcertEndTimeTxt.getText());
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Concert added successfully");
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Concert could not be added");
        }
    }//GEN-LAST:event_AddConcertBtnActionPerformed

    public String concertId;
    
    private void UpdateConcertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateConcertBtnActionPerformed
        // TODO add your handling code here:
        try
        {   con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");         
            String query1 = "update concert_info set concert_name=?, concert_venue=?, ticketa_price=?, ticketb_price=?, ticketc_price=?, sponsor=?" + "where concert_id=?";
            ps = con.prepareStatement(query1);

            ps.setString(1, EditConcertNameTxt.getText());
            ps.setString(2, EditConcertVenueTxt.getText());
            ps.setString(3, EditPremiumPriceTxt.getText());
            ps.setString(4, EditNonPremiumPriceTxt.getText());
            ps.setString(5, EditCorporatePriceTxt.getText());
            ps.setString(6, EditSponsorTxt.getText());
            ps.setString(7, concertId);
            ps.executeUpdate();
            
            String query2 = "update concert_schedule set start_date=?, end_date=?, start_time=?, end_time=?" + "where concert_id=?";
            ps = con.prepareStatement(query2);
            
            ps.setString(1, EditConcertStartDateTxt.getText());
            ps.setString(2, EditConcertEndDateTxt.getText());
            ps.setString(3, EditConcertStartTimeTxt.getText());
            ps.setString(4, EditConcertEndTimeTxt.getText());
            ps.setString(5, concertId);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Data updated successfully");
            
            AddConcertsLbl.setBackground(new java.awt.Color(255,255,255));
            AddBandsLbl.setBackground(new java.awt.Color(34,36,49));
            ManageConcertsLbl.setBackground(new java.awt.Color(34,36,49));
            
            OrganizerBotPnl.removeAll();
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
            OrganizerBotPnl.add(AddConcertsPnl);
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
        }
        catch(Exception e)
        {   
            
            JOptionPane.showMessageDialog(null, "Data couldn't be inserted");
            NameTxt.requestFocus();
        }
    }//GEN-LAST:event_UpdateConcertBtnActionPerformed

    private void DeleteConcertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteConcertBtnActionPerformed
        // TODO add your handling code here:
        try
        {   
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            String query = "delete from concert_info where concert_id=?";
        
            ps = con.prepareStatement(query);
            ps.setString(1, concertId);
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Concert Deleted Successfully");
            
            AddConcertsLbl.setBackground(new java.awt.Color(255,255,255));
            AddBandsLbl.setBackground(new java.awt.Color(34,36,49));
            ManageConcertsLbl.setBackground(new java.awt.Color(34,36,49));
            
            OrganizerBotPnl.removeAll();
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
            OrganizerBotPnl.add(AddConcertsPnl);
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Data couldn't be deleted");
            EditConcertNameTxt.requestFocus();
        }
    }//GEN-LAST:event_DeleteConcertBtnActionPerformed

    private void AddBandsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddBandsLblMouseClicked
        AddConcertsLbl.setBackground(new java.awt.Color(34,36,49));
        ManageConcertsLbl.setBackground(new java.awt.Color(34,36,49));
        AddBandsLbl.setBackground(new java.awt.Color(255,255,255));
        
        OrganizerBotPnl.removeAll();
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        OrganizerBotPnl.add(AddBandsPnl1);
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        
        try
        {   
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            String sql = "select concert_info.concert_id, concert_name, concert_venue, ticketa_price, ticketb_price, ticketc_price, sponsor, start_date, end_date, start_time, end_time from concert_info, concert_schedule where concert_info.concert_id=concert_schedule.concert_id AND concert_createdby=?";
            ps = con.prepareStatement(sql);
            ps.setString(1, username);
            rs = ps.executeQuery();
            SelectConcertTbl2.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }  
    }//GEN-LAST:event_AddBandsLblMouseClicked

    private void SelectConcertTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectConcertTblMouseClicked
        // TODO add your handling code here:
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            DefaultTableModel model = (DefaultTableModel)SelectConcertTbl.getModel();
            
            //get the selected row index
            int selectedRowIndex = SelectConcertTbl.getSelectedRow();
            
            //set the selected row data into JLabels
            concertId = model.getValueAt(selectedRowIndex, 0).toString();
            String name = model.getValueAt(selectedRowIndex, 1).toString();
            String venue = model.getValueAt(selectedRowIndex, 2).toString();
            String prem = model.getValueAt(selectedRowIndex, 3).toString();
            String nonprem = model.getValueAt(selectedRowIndex, 4).toString();
            String corp = model.getValueAt(selectedRowIndex, 5).toString();
            String spon = model.getValueAt(selectedRowIndex, 6).toString();
            String startDate = model.getValueAt(selectedRowIndex, 7).toString();
            String endDate = model.getValueAt(selectedRowIndex, 8).toString();
            String startTime = model.getValueAt(selectedRowIndex, 9).toString();
            String endTime = model.getValueAt(selectedRowIndex, 10).toString();
            
            OrganizerBotPnl.removeAll();
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
            OrganizerBotPnl.add(EditConcertDetailsPnl2);
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
            
            EditConcertNameTxt.setText(name);
            EditConcertVenueTxt.setText(venue);
            EditPremiumPriceTxt.setText(prem);
            EditNonPremiumPriceTxt.setText(nonprem);
            EditCorporatePriceTxt.setText(corp);
            EditSponsorTxt.setText(spon);
            EditConcertStartDateTxt.setText(startDate);
            EditConcertEndDateTxt.setText(endDate);
            EditConcertStartTimeTxt.setText(startTime);
            EditConcertEndTimeTxt.setText(endTime);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            JOptionPane.showMessageDialog(null, "Table has no data");
        }
    }//GEN-LAST:event_SelectConcertTblMouseClicked

    public String agentId;
    
    private void AddBandBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBandBtnActionPerformed
        // TODO add your handling code here:
        try
        {   
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            String query = "insert into agent_info(agent_name)" + "values(?)";
            String query2 = "select agent_id from agent_info where agent_name=?";
            String query3 = "insert into band_info(top_bands,agent_id,concert_id)" + "values(?,?,?)";
            
            ps = con.prepareStatement(query);
            ps.setString(1, AgentNameTxt.getText());
            ps.executeUpdate();
            
            ps = con.prepareStatement(query2);
            ps.setString(1, AgentNameTxt.getText());
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                agentId = rs.getString("agent_id");
            }
            
            ps = con.prepareStatement(query3);
            ps.setString(1, BandNameTxt.getText());
            ps.setString(2, agentId);
            ps.setString(3, concertId2);
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Data added successfully");
            
            OrganizerBotPnl.removeAll();
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
            OrganizerBotPnl.add(AddBandsPnl2);
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
            JOptionPane.showMessageDialog(null, "Data couldn't be inserted");
        }
    }//GEN-LAST:event_AddBandBtnActionPerformed

    public String concertId2;
    
    private void SelectConcertTbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectConcertTbl2MouseClicked
        // TODO add your handling code here:
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/musicfestival","root","");
            DefaultTableModel model = (DefaultTableModel)SelectConcertTbl2.getModel();
            
            //get the selected row index
            int selectedRowIndex = SelectConcertTbl2.getSelectedRow();
            
            //set the selected row data into JLabels
            concertId2 = model.getValueAt(selectedRowIndex, 0).toString();
            String name = model.getValueAt(selectedRowIndex, 1).toString();
            String venue = model.getValueAt(selectedRowIndex, 2).toString();
            String prem = model.getValueAt(selectedRowIndex, 3).toString();
            String nonprem = model.getValueAt(selectedRowIndex, 4).toString();
            String corp = model.getValueAt(selectedRowIndex, 5).toString();
            String spon = model.getValueAt(selectedRowIndex, 6).toString();
            String startDate = model.getValueAt(selectedRowIndex, 7).toString();
            String endDate = model.getValueAt(selectedRowIndex, 8).toString();
            String startTime = model.getValueAt(selectedRowIndex, 9).toString();
            String endTime = model.getValueAt(selectedRowIndex, 10).toString();
            
            OrganizerBotPnl.removeAll();
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
            OrganizerBotPnl.add(AddBandsPnl2);
            OrganizerBotPnl.repaint();
            OrganizerBotPnl.revalidate();
            
            EditConcertNameTxt.setText(name);
            EditConcertVenueTxt.setText(venue);
            EditPremiumPriceTxt.setText(prem);
            EditNonPremiumPriceTxt.setText(nonprem);
            EditCorporatePriceTxt.setText(corp);
            EditSponsorTxt.setText(spon);
            EditConcertStartDateTxt.setText(startDate);
            EditConcertEndDateTxt.setText(endDate);
            EditConcertStartTimeTxt.setText(startTime);
            EditConcertEndTimeTxt.setText(endTime);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            JOptionPane.showMessageDialog(null, "Table has no data");
        }
    }//GEN-LAST:event_SelectConcertTbl2MouseClicked

    private void BackToSelectConcertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToSelectConcertBtnActionPerformed
        // TODO add your handling code here:
        OrganizerBotPnl.removeAll();
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        OrganizerBotPnl.add(AddBandsPnl1);
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
    }//GEN-LAST:event_BackToSelectConcertBtnActionPerformed

    private void BackToSelectConcertTblBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToSelectConcertTblBtnActionPerformed
        // TODO add your handling code here:
        OrganizerBotPnl.removeAll();
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        OrganizerBotPnl.add(EditConcertDetailsPnl1);
        OrganizerBotPnl.repaint();
        OrganizerBotPnl.revalidate();
        ErrorLabel.setText(null);
    }//GEN-LAST:event_BackToSelectConcertTblBtnActionPerformed

    private void EditConcertStartTimeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditConcertStartTimeTxtKeyReleased
        String PATTERN = "^[0-9]{1,2}[:][0-9]{1,2}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(EditConcertStartTimeTxt.getText());
        
        if(!match.matches()){
            ErrorLabel.setText("Incorrect date or time (yyyy-mm-dd)(hh:mm)");
        }
        else{
            ErrorLabel.setText(null);
        }                //        // TODO add your handling code here:
    }//GEN-LAST:event_EditConcertStartTimeTxtKeyReleased

    private void EditConcertEndTimeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditConcertEndTimeTxtKeyReleased
        String PATTERN = "^[0-9]{1,2}[:][0-9]{1,2}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(EditConcertEndTimeTxt.getText());
        
        if(!match.matches()){
            ErrorLabel.setText("Incorrect date or time (yyyy-mm-dd)(hh:mm)");
        }
        else{
            ErrorLabel.setText(null);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_EditConcertEndTimeTxtKeyReleased

    private void EditConcertStartDateTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditConcertStartDateTxtKeyReleased
        String PATTERN = "^[0-9]{4,5}[-][0-9]{0,3}[-][0-9]{1,15}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(EditConcertStartDateTxt.getText());
        
        if(!match.matches()){
            ErrorLabel.setText("Incorrect date or time (yyyy-mm-dd)");
        }
        else{
            ErrorLabel.setText(null);
        }                 // TODO add your handling code here:
    }//GEN-LAST:event_EditConcertStartDateTxtKeyReleased

    private void EditConcertEndDateTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EditConcertEndDateTxtKeyReleased
        String PATTERN = "^[0-9]{4,5}[-][0-9]{0,3}[-][0-9]{1,15}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(EditConcertEndDateTxt.getText());
        
        if(!match.matches()){
            ErrorLabel.setText("Incorrect date or time (yyyy-mm-dd) (hh:mm)");
        }
        else{
            ErrorLabel.setText(null);
        }                 // TODO add your handling code here:
    }//GEN-LAST:event_EditConcertEndDateTxtKeyReleased

    private void ConcertStartDateTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConcertStartDateTxtKeyReleased
        String PATTERN = "^[0-9]{4,5}[-][0-9]{0,3}[-][0-9]{1,3}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(ConcertStartDateTxt.getText());
        
        if(!match.matches()){
            AddDateErrorLabel.setText("Incorrect date (yyyy-mm-dd)");
        }
        else{
            AddDateErrorLabel.setText(null);
        }                      // TODO add your handling code here:
    }//GEN-LAST:event_ConcertStartDateTxtKeyReleased

    private void ConcertEndDateTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConcertEndDateTxtKeyReleased
        String PATTERN = "^[0-9]{4,5}[-][0-9]{0,3}[-][0-9]{1,3}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(ConcertEndDateTxt.getText());
        
        if(!match.matches()){
            AddDateErrorLabel.setText("Incorrect date (yyyy-mm-dd)");
        }
        else{
            AddDateErrorLabel.setText(null);
        }                 // TODO add your handling code here:
    }//GEN-LAST:event_ConcertEndDateTxtKeyReleased

    private void ConcertStartTimeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConcertStartTimeTxtKeyReleased
        String PATTERN = "^[0-9]{1,2}[:][0-9]{1,2}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(ConcertStartTimeTxt.getText());
        
        if(!match.matches()){ 
            AddTimeErrorLabel.setText("Incorrect time (hh:mm)");
        }
        else{
            AddTimeErrorLabel.setText(null);
        }     // TODO add your handling code here:
    }//GEN-LAST:event_ConcertStartTimeTxtKeyReleased

    private void ConcertEndTimeTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ConcertEndTimeTxtKeyReleased
        String PATTERN = "^[0-9]{1,2}[:][0-9]{1,2}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(ConcertEndTimeTxt.getText());
        
        if(!match.matches()){
            AddTimeErrorLabel.setText("Incorrect time (hh:mm)");
        }
        else{
            AddTimeErrorLabel.setText(null);
        }             // TODO add your handling code here:
    }//GEN-LAST:event_ConcertEndTimeTxtKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrganizerHome2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrganizerHome2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrganizerHome2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrganizerHome2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrganizerHome2(username).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A_PremiumPriceLbl;
    private javax.swing.JButton AddBandBtn;
    private javax.swing.JLabel AddBandsLbl;
    private javax.swing.JPanel AddBandsPnl1;
    private javax.swing.JPanel AddBandsPnl2;
    private javax.swing.JButton AddConcertBtn;
    private javax.swing.JLabel AddConcertsLbl;
    private javax.swing.JPanel AddConcertsPnl;
    private javax.swing.JLabel AddDateErrorLabel;
    private javax.swing.JLabel AddTimeErrorLabel;
    private javax.swing.JLabel AddressLbl;
    private javax.swing.JTextField AddressTxt;
    private javax.swing.JLabel AgentNameLbl;
    private javax.swing.JTextField AgentNameTxt;
    private javax.swing.JLabel B_NonPremiumPriceLbl;
    private javax.swing.JButton BackToSelectConcertBtn;
    private javax.swing.JButton BackToSelectConcertTblBtn;
    private javax.swing.JLabel BandNameLbl;
    private javax.swing.JTextField BandNameTxt;
    private javax.swing.JLabel C_CorporatePriceLbl;
    private javax.swing.JLabel ConcertEndDateLbl;
    private javax.swing.JTextField ConcertEndDateTxt;
    private javax.swing.JLabel ConcertEndTimeLbl;
    private javax.swing.JTextField ConcertEndTimeTxt;
    private javax.swing.JLabel ConcertNameLbl;
    private javax.swing.JTextField ConcertNameTxt;
    private javax.swing.JLabel ConcertStartDateLbl;
    private javax.swing.JTextField ConcertStartDateTxt;
    private javax.swing.JLabel ConcertStartTimeLbl;
    private javax.swing.JTextField ConcertStartTimeTxt;
    private javax.swing.JLabel ConcertVenueLbl;
    private javax.swing.JTextField ConcertVenueTxt;
    private javax.swing.JTextField CorporatePriceTxt;
    private javax.swing.JLabel CreditLbl;
    private javax.swing.JTextField CreditTxt;
    private javax.swing.JButton DeleteConcertBtn;
    private javax.swing.JLabel EditA_PremiumPriceLbl;
    private javax.swing.JButton EditAccDetailsBtn;
    private javax.swing.JPanel EditAccDetailsPnl;
    private javax.swing.JLabel EditAccDetailsTitleLbl;
    private javax.swing.JLabel EditB_NonPremiumPriceLbl;
    private javax.swing.JLabel EditC_CorporatePriceLbl;
    private javax.swing.JLabel EditConcertDetailsLbl;
    private javax.swing.JLabel EditConcertDetailsLbl2;
    private javax.swing.JPanel EditConcertDetailsPnl1;
    private javax.swing.JPanel EditConcertDetailsPnl2;
    private javax.swing.JLabel EditConcertEndDateLbl;
    private javax.swing.JTextField EditConcertEndDateTxt;
    private javax.swing.JLabel EditConcertEndTimeLbl;
    private javax.swing.JTextField EditConcertEndTimeTxt;
    private javax.swing.JLabel EditConcertNameLbl;
    private javax.swing.JTextField EditConcertNameTxt;
    private javax.swing.JLabel EditConcertStartDateLbl;
    private javax.swing.JTextField EditConcertStartDateTxt;
    private javax.swing.JLabel EditConcertStartTimeLbl;
    private javax.swing.JTextField EditConcertStartTimeTxt;
    private javax.swing.JLabel EditConcertVenueLbl;
    private javax.swing.JTextField EditConcertVenueTxt;
    private javax.swing.JTextField EditCorporatePriceTxt;
    private javax.swing.JTextField EditNonPremiumPriceTxt;
    private javax.swing.JTextField EditPremiumPriceTxt;
    private javax.swing.JLabel EditSponsorLbl;
    private javax.swing.JTextField EditSponsorTxt;
    private javax.swing.JLabel ErrorLabel;
    private javax.swing.JLabel LogOutLbl;
    private javax.swing.JLabel LoggedInAsLbl;
    private javax.swing.JLabel MainIcon;
    private javax.swing.JLabel ManageConcertsLbl;
    private javax.swing.JLabel NameLbl;
    private javax.swing.JTextField NameTxt;
    private javax.swing.JTextField NonPremiumPriceTxt;
    private javax.swing.JPanel OrganizerBotPnl;
    private javax.swing.JPanel OrganizerHomePnl;
    private javax.swing.JLabel OrganizerPicIcon;
    private javax.swing.JLabel PasswordLbl;
    private javax.swing.JTextField PasswordTxt;
    private javax.swing.JLabel PhoneLbl;
    private javax.swing.JTextField PhoneTxt;
    private javax.swing.JTextField PremiumPriceTxt;
    private javax.swing.JLabel ProjectTitleLbl;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JLabel SelectConcertLbl;
    private javax.swing.JTable SelectConcertTbl;
    private javax.swing.JTable SelectConcertTbl2;
    private javax.swing.JLabel SponsorLbl;
    private javax.swing.JTextField SponsorTxt;
    private javax.swing.JButton UpdateConcertBtn;
    private javax.swing.JLabel WebLbl;
    private javax.swing.JTextField WebTxt;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
